name: EKS Automate

on:
  push:
    branches:
      - main

jobs:
  deploy-or-destroy:
    runs-on: ubuntu-latest

    steps:


      - name: Checkout Code
        uses: actions/checkout@v4


      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region $AWS_DEFAULT_REGION
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}


      - name: Check for DEPLOY or DESTROY file
        run: |
          if [[ -f DEPLOY ]] && [[ -f DESTROY ]]; then
            echo "Cannot perform both a  DEPLOY and DESTROY, please remove one of the files. Exiting..."
            exit 1
          fi

          if [[ -f DEPLOY ]]; then
            echo "Checking if the EKS cluster exists..."
            if aws eks describe-cluster --name $AWS_EKS_CLUSTERNAME --region $AWS_DEFAULT_REGION &> /dev/null; then
              echo "EKS cluster already exists. Skipping deployment."
            else
              echo "Deploying EKS cluster..."
              # eksctl create cluster --name $AWS_EKS_CLUSTERNAME --region $AWS_DEFAULT_REGION --node-type t2.micro
            fi

          elif [[ -f DESTROY ]]; then
            echo "Checking if the EKS cluster exists..."
            if ! aws eks describe-cluster --name $AWS_EKS_CLUSTERNAME --region $AWS_DEFAULT_REGION &> /dev/null; then
              echo "EKS cluster does not exist. Skipping destruction."
            else
              echo "Destroying EKS cluster..."
              # eksctl delete cluster --name $AWS_EKS_CLUSTERNAME --region $AWS_DEFAULT_REGION
            fi

          else
            echo "No DEPLOY or DESTROY file found. Skipping..."
          fi

        continue-on-error: true
        env:
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          AWS_EKS_CLUSTERNAME: ${{ env.AWS_EKS_CLUSTERNAME }}
